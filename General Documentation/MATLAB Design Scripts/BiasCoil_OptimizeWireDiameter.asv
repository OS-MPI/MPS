clear; clc;
close all;

set(0,'DefaultFigureWindowStyle','docked');


% WireDList = .0001:.0001:.01; %The list of wire diameters to test
Solenoid_Length_List = .1:.01:.2;
WireDList= .00081; %Meters
PlotOn =  not(length(WireDList)>1);
CoilCost = zeros(1,length(WireDList));
LayersPerBlock = 5; % A "Block" is a set of layers before an air gap
Rx_Length = .07; %Approx length of center-center between gradiometer halves


Amplifier_Load = 8; %Ohms
Amplifier_Power = 600; %Max Watts at match
MaxCurrent = sqrt(Amplifier_Power/Amplifier_Load);
MaxVoltage = sqrt(Amplifier_Power*Amplifier_Load);
TestFreq = 20; %Hz

for j = 1:length(WireDList)
    for jj = 1:length(Solenoid_Length_List)
    PlotOn =  not((length(WireDList)>1)|(length(Solenoid_Length_List)>1));
    Solenoid_Length = Solenoid_Length_List(jj);%meters
    TubeDiam = .0412; %Sets the ID of the bias coil
    TubeCircum = pi*TubeDiam;%meters
    
    ResistanceGoal = 6;%Ohms
    CuResistivity = 1.7e-8; %ohm*m
    
    ILim = 5; %The maximum current the amplifier allows
    
    Wire_D = WireDList(j);%meters
    Wire_A = pi/4*Wire_D^2;%m^2
    Wire_L = ResistanceGoal*Wire_A/CuResistivity; %solving for total wire length
    
    TurnsPerLayer = Solenoid_Length/Wire_D;
    Turns = Wire_L/TubeCircum;
    
    Layers = ceil(Turns/TurnsPerLayer);
    
    LayerGap = .004; %Radial distance of each air gap
    
    CuDensity = 9e3; %kg/m^3
    CuCostPerkg = 30;%USD
    
    CoilMass = Wire_A*Wire_L*CuDensity;
    CoilVol =  Wire_A*Wire_L;
    
    VolumetricPowerDensity = ILim^2*ResistanceGoal/CoilVol; %volumetric power assuming ILim @ DC
    CoilCost(j) = CoilMass*CuCostPerkg;
    
    B_Rx= 0;
clear B

        Base_Circum = ones(1,round(Layers))*TubeCircum; %This is the circumfrence of a single turn on the innermost layer
        Num_AirGaps = floor((0:round(Layers)-1)/LayersPerBlock); %This is the number of airgaps prior to the respective layer (so 1 mean there is one airgap prior to it)
        Wire_Thickness_Offset = 2*pi*Wire_D*(0:round(Layers)-1); %This corresponds to the additional circumfrence for each layer due to wire thickness (2*pi*wire diameter because the radius increases by a wire's diameter)
        
        TotalLength = TurnsPerLayer * (Base_Circum + Num_AirGaps*2*pi*LayerGap+Wire_Thickness_Offset);
        %total length is a vector of lengths for each layer of wire where
        %the first position is the first layer
        CurrentLength = 0;
        i = 0;
        while CurrentLength<Wire_L %doesnt allow overshooting or having partial layers
            i = i+1;
            ii = i-.1;
            K =floor(ii/LayersPerBlock); %to double count, so 1,1,2,2,3,3,....
            [B(i,:), B_Rx(i),x] = LayerField(Wire_D,TubeDiam+(K)*LayerGap+i*Wire_D,Solenoid_Length,PlotOn);
            %B is the field along the axis, B_Rx is the |B| at the sample
            CurrentLength = CurrentLength+TotalLength(K+1); %counting total length
            
        end
  
    B_Rx_Tot(j) = sum(B_Rx); %the sum of the field contributions from each layer
       
    
    TotTurns = TurnsPerLayer*length(TotalLength);
    disp([num2str(TotTurns),'Turns total, and ',num2str(length(TotalLength)),' Layers'])
    meanDiam = sum(TotalLength)/TurnsPerLayer/pi/length(TotalLength);
    DiamList = TotalLength/TurnsPerLayer/pi;
    meanEnclosedArea = pi/4*meanDiam^2;
    ApproxInductance = 4*pi*1e-7*TotTurns^2*meanEnclosedArea/Solenoid_Length;
    InductiveImpedance = 2*pi*TestFreq*ApproxInductance; %2 pi F L
    
    TotalImpedance = sqrt(ResistanceGoal^2+InductiveImpedance^2);
    TotalMaxCurrent = MaxVoltage/TotalImpedance; %I = (V/R)
    
    
    disp(['Total Solenoid Length is ', num2str(Solenoid_Length),' m.'])
    disp(['Total Inductive Impedance is ~', num2str(round(InductiveImpedance,1)),' Ohms.'])
    disp(['Total inductance is ~', num2str(round(ApproxInductance*1e3,1)),' mH.'])
     figure(2), plot(x-Solenoid_Length/2,sum(B)*TotalMaxCurrent) 
     hold on
    ylabel('Field on axis [T]')
    xlabel('Distance along axis[m]')
    title('Total Field on axis at max power')
    pause(1)
    end
end



function [B,B_Rx,x] = LayerField(wire_d,Turn_diam,L,PlotOn)
radius = Turn_diam/2;

mu0 = 4*pi*1e-7; % [Tm/A]
n = 1/wire_d; %turn density

x = linspace(0,L,1e3);
Ipk = 1;

x1 = 0;%Front face of solenoid is 0, x1 can be negative values to plot values over a larger FOV
x2 = L; %End face of region is L if you want to only plot until the end of the solenoid

term1 = (x-x1)./sqrt((x-x1).^2 + radius^2);
term2 = (x-x2)./sqrt((x-x2).^2 + radius^2);
B = (Ipk*mu0*n/2)*(term1-term2);


B_Rx = B(850); %This line selects where the center of the sample will be in this case B(850)...
% represents 85% the length of the solenoid because there
% are 1000 points being solved for across the solenoid's
% axis

if PlotOn==1
    figure(1), plot(x,B) %comment out this line if you test multiple wire diamters! Or you will plot lots of lines on the figure...
    hold on
    ylabel('Field on axis [T]')
    xlabel('Distance along axis[m]')
    title('Field Contribution of each layer')
end

end

